/**
 * Delve Client SDK
 * This is a Client SDK for Delve API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@relational.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AbstractProblem from './AbstractProblem';
import LabeledActionResult from './LabeledActionResult';
import RelDict from './RelDict';

/**
 * The TransactionResult model module.
 * @module model/TransactionResult
 * @version 1.0.0
 */
class TransactionResult {
    /**
     * Constructs a new <code>TransactionResult</code>.
     * @alias module:model/TransactionResult
     * @param objtp {module:model/TransactionResult.ObjtpEnum} 
     */
    constructor(objtp) { 
        
        TransactionResult.initialize(this, objtp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objtp) { 
        obj['objtp'] = objtp;
    }

    /**
     * Constructs a <code>TransactionResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionResult} obj Optional instance to populate.
     * @return {module:model/TransactionResult} The populated <code>TransactionResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionResult();

            if (data.hasOwnProperty('output')) {
                obj['output'] = RelDict.constructFromObject(data['output']);
            }
            if (data.hasOwnProperty('problems')) {
                obj['problems'] = ApiClient.convertToType(data['problems'], [AbstractProblem]);
            }
            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [LabeledActionResult]);
            }
            if (data.hasOwnProperty('aborted')) {
                obj['aborted'] = ApiClient.convertToType(data['aborted'], 'Boolean');
            }
            if (data.hasOwnProperty('objtp')) {
                obj['objtp'] = ApiClient.convertToType(data['objtp'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/RelDict} output
 */
TransactionResult.prototype['output'] = undefined;

/**
 * @member {Array.<module:model/AbstractProblem>} problems
 */
TransactionResult.prototype['problems'] = undefined;

/**
 * @member {Array.<module:model/LabeledActionResult>} actions
 */
TransactionResult.prototype['actions'] = undefined;

/**
 * @member {Boolean} aborted
 * @default false
 */
TransactionResult.prototype['aborted'] = false;

/**
 * @member {module:model/TransactionResult.ObjtpEnum} objtp
 * @default 'TransactionResult'
 */
TransactionResult.prototype['objtp'] = 'TransactionResult';





/**
 * Allowed values for the <code>objtp</code> property.
 * @enum {String}
 * @readonly
 */
TransactionResult['ObjtpEnum'] = {

    /**
     * value: "TransactionResult"
     * @const
     */
    "TransactionResult": "TransactionResult"
};



export default TransactionResult;

