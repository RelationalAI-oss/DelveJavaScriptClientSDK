/**
 * Delve Client SDK
 * This is a Client SDK for Delve API
 *
 * The version of the OpenAPI document: 1.0.8
 * Contact: support@relational.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InfraError from '../model/InfraError';
import Transaction from '../model/Transaction';
import TransactionResult from '../model/TransactionResult';

/**
* Default service.
* @module cloudclient/api/DefaultApi
* @version 1.0.8
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:cloudclient/api/DefaultApi
    * @class
    * @param {module:cloudclient/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:cloudclient/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the transactionPost operation.
     * @callback module:cloudclient/api/DefaultApi~transactionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:cloudclient/model/TransactionResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issues a transaction to be executed
     * @param {module:cloudclient/model/Transaction} transaction Optional description in *Markdown*
     * @param {module:cloudclient/api/DefaultApi~transactionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:cloudclient/model/TransactionResult}
     */
    transactionPost(transaction, callback) {
      let postBody = transaction;
      // verify the required parameter 'transaction' is set
      if (transaction === undefined || transaction === null) {
        throw new Error("Missing the required parameter 'transaction' when calling transactionPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransactionResult;
      return this.apiClient.callApi(
        '/transaction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
